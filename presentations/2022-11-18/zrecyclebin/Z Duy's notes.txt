Get my hands dirty with the git repo
Do some maths analysis over distances

Let's say, multiple multilingual models, one model each period? => They implemented this in twapy.

Well, twapy is shite. It runs on gensim 2.2 they said, it in the same time doesn't accept that version they never said.
gensim==2.2.0 installed => WARNING:twapy:Gensim import failed. Please ensure that gensim verison 2 or greater is installed.

Finally I got it working. For those who want to run the twapy baseline: you should install gensim 3.5.0 (as gensim 2.2.0 and 4.2.0 don't work). I paid sweat and blood for that experience.

Number of vectors: ~160k

For the vector size of 256, I've got the following results
```
1987 : reagan :: 1997 : clinton (US presidency)
1987 : mitterrand :: 1997 : mr_chirac (French presidency)
1987 : gorbachev :: 1997 : mr_yeltsin (From Soviet to Russian precidency)
1987 : soviet :: 1997 : russian (Historical event based on entities)
1987 : gemayel :: 1997 : denktash (Lebanese presidency, incorrect as Hrawi is in 1997) (imprecision of less presented words)
1987 : icbm :: 1997 : warheads (Change of war strategies during the period?)
1987 : internet :: 2023 : mygf (Out-Of-Vocabularies) [I made it up don't fall for this, the OOV is real tho]
```

Add thpronun
2 years ago
translate.py
Add many to translate many texts
2 years ago
tree.py 
twapy uses the KeyedVectors mapper to map work-and-vector pairs
it calculates the distances of vectors againsts the norm of the given word's vector
dists = dot(self.vectors[clip_start:clip_end], mean) / self.norms[clip_start:clip_end]
and get the top n word vectors with the least distance to the given word's vector
=> We can use other mappers in gensim
=> The coordinates of a word in it's embeddings is used in the reference embeddings, with or without normalisation

The OOV problem persists in twapy. I was trying to reverse the analogy order and got a promising result:
1997 : internet :: 1987 : computer (since internet wasn't a thing in 1987, it's smh realisable)
From this, we can have some approaches to tackle the OOV

